<!DOCTYPE html>
<html lang="hu">
<head>
<meta charset="UTF-8">
<title>Függvények Gyakorlata</title>
<script>
// Adatküldés egy szervernek AJAX segítségével
function sendDataToServer(data) {
  const xhr = new XMLHttpRequest();
  xhr.open("POST", "https://your-backend-api.com/data", true);
  xhr.setRequestHeader("Content-Type", "application/json");
  xhr.onreadystatechange = function () {
    if (xhr.readyState === 4 && xhr.status === 200) {
      console.log("Adat sikeresen elküldve a szervernek.");
    }
  };
  xhr.send(JSON.stringify(data));
}

// Adatlekérés az Fetch API használatával
async function fetchUserData(userId) {
  try {
    const response = await fetch(`https://your-backend-api.com/users/${userId}`);
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const data = await response.json();
    return data;
  } catch (error) {
    console.error('A lekérdezés sikertelen volt: ', error);
  }
}

// Űrlapmezők Egyszerű Validálása
function validateForm() {
  let name = document.forms["myForm"]["name"].value;
  if (name == "") {
    alert("A név mező kitöltése kötelező.");
    return false;
  }
  // További validálások...
}

// Komplex Űrlap Validálás Reguláris Kifejezésekkel
function validateEmail(email) {
  const regex = /^\S+@\S+\.\S+$/;
  return regex.test(email);
}

// Az oldal betöltésekor indítandó funkciók
window.onload = function() {
  // Példa adatok elküldése szervernek
  // sendDataToServer({ name: "Anna", age: 30 });
  
  // Példa adatlekérés egy felhasználóhoz (ID: 123)
  // fetchUserData(123)
  //   .then(userData => console.log(userData))
  //   .catch(error => console.error(error));
};
</script>
</head>
<body>

<h1>Webes Űrlap Validálása és Szerver Kommunikáció</h1>

<form name="myForm" onsubmit="return validateForm()">
  <label for="name">Név:</label>
  <input type="text" id="name" name="name"><br><br>
  
  <label for="email">Email:</label>
  <input type="text" id="email" name="email"><br><br>
  
  <input type="submit" value="Submit">
</form>

<script>
// Az űrlap elküldésének eseménykezelője
document.forms["myForm"].onsubmit = function(e) {
  e.preventDefault(); // Az űrlap alapértelmezett elküldésének megakadályozása
  
  let email = document.forms["myForm"]["email"].value;
  if (!validateEmail(email)) {
    alert("Érvénytelen email cím.");
    return false;
  }
  
  // Ha minden validáció sikeres
  // Itt lehetne az adatokat elküldeni a szervernek
  sendDataToServer({
    name: document.forms["myForm"]["name"].value,
    email: email
  });
};
</script>

</body>
</html>
